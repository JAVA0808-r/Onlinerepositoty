// Shapes.java fayli
abstract class Shape {
    private String color; // Encapsulation - private field
    
    public Shape(String color) {
        this.color = color;
    }
    
    // Encapsulation - getter method
    public String getColor() {
        return color;
    }
    
    // Abstract methods to be overridden by subclasses
    public abstract double getArea();
    public abstract double getPerimeter();
}

class Circle extends Shape {
    private double radius; // Encapsulation - private field
    
    public Circle(String color, double radius) {
        super(color);
        this.radius = radius;
    }
    
    // Getter for radius
    public double getRadius() {
        return radius;
    }
    
    @Override
    public double getArea() {
        return Math.PI * radius * radius;
    }
    
    @Override
    public double getPerimeter() {
        return 2 * Math.PI * radius;
    }
}

class Rectangle extends Shape {
    private double length; // Encapsulation - private field
    private double width;  // Encapsulation - private field
    
    public Rectangle(String color, double length, double width) {
        super(color);
        this.length = length;
        this.width = width;
    }
    
    // Getters for length and width
    public double getLength() {
        return length;
    }
    
    public double getWidth() {
        return width;
    }
    
    @Override
    public double getArea() {
        return length * width;
    }
    
    @Override
    public double getPerimeter() {
        return 2 * (length + width);
    }
}

class Triangle extends Shape {
    private double side1; // Encapsulation - private fields
    private double side2;
    private double side3;
    
    public Triangle(String color, double side1, double side2, double side3) {
        super(color);
        this.side1 = side1;
        this.side2 = side2;
        this.side3 = side3;
    }
    
    // Getters for sides
    public double getSide1() {
        return side1;
    }
    
    public double getSide2() {
        return side2;
    }
    
    public double getSide3() {
        return side3;
    }
    
    @Override
    public double getArea() {
        // Heron's formula
        double s = getPerimeter() / 2;
        return Math.sqrt(s * (s - side1) * (s - side2) * (s - side3));
    }
    
    @Override
    public double getPerimeter() {
        return side1 + side2 + side3;
    }
}

public class Shapes {
    public static void main(String[] args) {
        // Create different shape objects
        Shape circle = new Circle("Red", 5.0);
        Shape rectangle = new Rectangle("Blue", 4.0, 6.0);
        Shape triangle = new Triangle("Green", 3.0, 4.0, 5.0);
        
        // Display information about shapes
        displayShapeInfo(circle);
        displayShapeInfo(rectangle);
        displayShapeInfo(triangle);
    }
    
    public static void displayShapeInfo(Shape shape) {
        System.out.println("Shape: " + shape.getClass().getSimpleName());
        System.out.println("Color: " + shape.getColor());
        System.out.println("Area: " + shape.getArea());
        System.out.println("Perimeter: " + shape.getPerimeter());
        System.out.println("--------------------------");
    }
}
